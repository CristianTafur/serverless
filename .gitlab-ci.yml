image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service

cache:
  paths:
    - node_modules/

stages:
  - init
  - test
  - deploy

Init:
  when: always
  stage: init
  services:
  - postgres:latest
  variables:
    POSTGRES_DB: $DB_NAME_DEV
    POSTGRES_USER: $DB_USER_DEV
    POSTGRES_PASSWORD: $DB_PASS_DEV
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - DB_NAME=$DB_NAME_DEV
    - DB_USER=$DB_USER_DEV
    - DB_HOST=$DB_HOST_DEV
    - DB_PASS=$DB_PASS_DEV
    - echo $DB_HOST
    - npm i
    - npm run eslint
    - npm migrate

Test:
  when: always
  stage: test
  script:
    - make unit_test
  coverage: '/All\sfiles.*\|.*\|.*\|.*\|\s+(\d+.\d+)/'
  artifacts:
    paths:
      - coverage/lcov.info
    expire_in: 1000 sec


Deploy:
  when: manual
  stage: deploy
  script:
    - echo $DB_HOST
    # - npm install -g serverless
    # - serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
    # - serverless deploy
  only:
    - master




